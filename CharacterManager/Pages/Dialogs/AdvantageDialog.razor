<MudDialog IsVisible="false">
    <TitleContent>
        <MudText Typo="Typo.body1">@Advantage.Name</MudText>
    </TitleContent>
    <DialogContent>
        <MudStack Spacing="0">
            <MudText Typo="Typo.subtitle2">@Advantage.Description</MudText>
            <MudStack Row="true">
                @if (!String.IsNullOrWhiteSpace( Advantage.Requirements))
                {
                    <MudText Typo="Typo.subtitle2">@Advantage.Requirements</MudText>
                }
                <MudText Typo="Typo.subtitle2" Align="Align.End"><b>Cost: @Advantage.Cost</b></MudText>
            </MudStack>
        </MudStack>
    </DialogContent>

    <DialogActions>
        <MudButton OnClick="Instance.Cancel">Close</MudButton>
        <MudButton Color="Color.Error" OnClick="Remove">Remove</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [Parameter]
    public Advantage Advantage { get; set; } = null!;

    [Parameter]

    [CascadingParameter]
    public MudDialogInstance Instance { get; set; } = null!;

    [Inject]
    IDialogService DialogService { get; set; } = null!;

    async Task Remove()
    {
        var ensureResult = await DialogService.ShowMessageBox("Are you sure you want to remove this advantage?", "This action can't be undone", "Remove", "Cancel");
        if (ensureResult != true)
            return;
        Instance.Close(Advantage);
    }
}
